exclude_modules = ["*.__init__"] # исключает модули из проверки


[layers]

[layers.dicontainer]
description = ""
contains_modules = [
    "example_project.container"
]
depends_on = ["usecases", "infrastructure", "libs", "libs"]


[layers.usecases]
description = ""
contains_modules = [
    "example_project.domains.*.use_cases.*",
    "example_project.domains.*.use_cases",
]
depends_on = ["libs", "libs"]


[layers.validation]
description = ""
contains_modules = [
    "example_project.domains.*.validations.*",
    "example_project.domains.*.validations",
]
depends_on = ["libs", "libs"]


[layers.services]
description = ""
contains_modules = [
    "example_project.domains.*.services.*",
    "example_project.domains.*.service",
]
depends_on = ["core", "libs", "libs"]


[layers.core]
description = ""
contains_modules = [
    "example_project.domains.*.aggregates.*",
    "example_project.domains.*.aggregates",
    "example_project.domains.*.entities.*",
    "example_project.domains.*.entities",
    "example_project.domains.*.value_objects.*",
    "example_project.domains.*.value_objects",
]
depends_on = ["libs", "libs"]


[layers.infrastructure]
description = ""
contains_modules = [
    "example_project.infrastructure.*",
    "example_project.domains.*.repositories.*",
    "example_project.domains.*.repositories",
    "example_project.domains.*.repository",
    "example_project.domains.*.models.*",
    "example_project.domains.*.models",
]
depends_on = ["libs"]


[layers.presentation]
description = ""
contains_modules = [
    "example_project.presentation.*",
    "example_project.domains.*.endpoints.*",
    "example_project.domains.*.endpoints",
    "example_project.domains.*.resources.*",
    "example_project.domains.*.resources",
    "example_project.domains.*.views.*",
    "example_project.domains.*.views",
    "example_project.domains.*.handlers.*",
    "example_project.domains.*.handlers",
    "example_project.domains.*.cli.*",
    "example_project.domains.*.cli",
]
depends_on = ["dicontainer", "usecases", "libs"]


[layers.autonomy]
description = ""
contains_modules = [
    "example_project.alembic.*",
]
depends_on = [] # Не может использовать другие слои.


[layers.libs]
description = ""
contains_modules = [
    "example_project.logger",
    "example_project.datatypes",
    "example_project.settings",
    "*.utils.*",
    "*.utils",
    "*.libs.*",
    "*.libs",
    "*.exceptions",
    "*.interfaces",
    "*.schemas",
    "*.dto",
    "*.enums",
]
depends_on = [] # Не может использовать другие слои.


# Условия на зависимость от библиотек и фреймворков.
[libs]
[libs.sqlalchemy]
allowed_in = ["infrastructure"] # Эи слои могут импортировать этот пакет, а другие нет.

[libs.pydantic]
allowed_in = ["libs"]

[libs.fastapi]
allowed_in = ["presentation"]

[libs.argparse]
allowed_in = ["presentation"]
